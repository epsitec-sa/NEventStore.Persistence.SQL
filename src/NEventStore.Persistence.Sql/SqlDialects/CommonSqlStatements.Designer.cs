//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NEventStore.Persistence.Sql.SqlDialects {
    using System;
    using System.Reflection;


    internal class CommonSqlStatements {
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT
        ///INTO Snapshots
        /// ( BucketId, StreamId, StreamRevision, Payload )
        ///SELECT @BucketId, @StreamId, @StreamRevision, @Payload
        ////*FROM DUAL*/
        ///WHERE EXISTS
        /// ( SELECT *
        ///     FROM Commits
        ///    WHERE BucketId = @BucketId
        ///      AND StreamId = @StreamId
        ///      AND (StreamRevision - Items) <= @StreamRevision )
        ///AND NOT EXISTS
        /// ( SELECT *
        ///     FROM Snapshots
        ///    WHERE BucketId = @BucketId
        ///      AND StreamId = @StreamId
        ///      AND StreamRevision = @StreamRevision );.
        /// </summary>
        internal static string AppendSnapshotToCommit {
            get {
                return ResourceManagerStub.GetString(@"INSERT 
INTO Snapshots
 (BucketId, StreamId, StreamRevision, Payload)
SELECT @BucketId, @StreamId, @StreamRevision, @Payload
/*FROM DUAL*/
WHERE EXISTS
 (SELECT *
     FROM Commits
    WHERE BucketId = @BucketId
      AND StreamId = @StreamId
      AND (StreamRevision - Items) & <= @StreamRevision )
AND NOT EXISTS
 (SELECT *
     FROM Snapshots
    WHERE BucketId = @BucketId
      AND StreamId = @StreamId
      AND StreamRevision = @StreamRevision);", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Snapshots WHERE BucketId =@BucketId AND StreamId = @StreamId;
        ///DELETE FROM Commits WHERE BucketId = @BucketId AND StreamId = @StreamId;.
        /// </summary>
        internal static string DeleteStream {
            get {
                return ResourceManagerStub.GetString(@"DELETE FROM Snapshots WHERE BucketId =@BucketId AND StreamId = @StreamId;
DELETE FROM Commits WHERE BucketId = @BucketId AND StreamId = @StreamId;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE Snapshots;
        ///DROP TABLE Commits;.
        /// </summary>
        internal static string DropTables {
            get {
                return ResourceManagerStub.GetString(@"DROP TABLE Snapshots;
DROP TABLE Commits;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(*)
        ///  FROM Commits
        /// WHERE BucketId = @BucketId 
        ///   AND StreamId = @StreamId
        ///   AND CommitSequence = @CommitSequence
        ///   AND CommitId = @CommitId;.
        /// </summary>
        internal static string DuplicateCommit {
            get {
                return ResourceManagerStub.GetString(@"SELECT COUNT(*)
  FROM Commits
 WHERE BucketId = @BucketId 
   AND StreamId = @StreamId
   AND CommitSequence = @CommitSequence
   AND CommitId = @CommitId;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
        ///  FROM Commits
        /// WHERE BucketId = @BucketId 
        ///   AND CheckpointNumber > @CheckpointNumber
        /// ORDER BY CheckpointNumber 
        /// LIMIT @Limit OFFSET @Skip;.
        /// </summary>
        internal static string GetCommitsFromBucketAndCheckpoint {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
  FROM Commits
 WHERE BucketId = @BucketId 
   AND CheckpointNumber > @CheckpointNumber
 ORDER BY CheckpointNumber 
 LIMIT @Limit OFFSET @Skip;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
        ///FROM Commits
        ///WHERE  CheckpointNumber > @CheckpointNumber
        ///ORDER BY CheckpointNumber
        /// LIMIT @Limit OFFSET @Skip;.
        /// </summary>
        internal static string GetCommitsFromCheckpoint {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
FROM Commits
WHERE  CheckpointNumber > @CheckpointNumber
ORDER BY CheckpointNumber
 LIMIT @Limit OFFSET @Skip;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
        ///  FROM Commits
        /// WHERE BucketId = @BucketId AND CommitStamp >= @CommitStamp
        /// ORDER BY CommitStamp, StreamId, CommitSequence
        /// LIMIT @Limit OFFSET @Skip;.
        /// </summary>
        internal static string GetCommitsFromInstant {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
  FROM Commits
 WHERE BucketId = @BucketId
   AND CommitStamp >= @CommitStampStart
   AND CommitStamp < @CommitStampEnd
 ORDER BY CommitStamp, StreamId, CommitSequence
 LIMIT @Limit OFFSET @Skip;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp,  CheckpointNumber, Headers, Payload
        ///  FROM Commits
        /// WHERE BucketId = @BucketId
        ///   AND StreamId = @StreamId
        ///   AND StreamRevision >= @StreamRevision
        ///   AND (StreamRevision - Items) < @MaxStreamRevision
        ///   AND CommitSequence > @CommitSequence
        /// ORDER BY CommitSequence
        /// LIMIT @Limit;.
        /// </summary>
        internal static string GetCommitsFromStartingRevision {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp,  CheckpointNumber, Headers, Payload
  FROM Commits
 WHERE BucketId = @BucketId
   AND StreamId = @StreamId
   AND StreamRevision >= @StreamRevision
   AND (StreamRevision - Items) < @MaxStreamRevision
   AND CommitSequence > @CommitSequence
 ORDER BY CommitSequence
 LIMIT @Limit;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
        ///  FROM Commits
        /// WHERE BucketId = @BucketId
        ///   AND CommitStamp >= @CommitStampStart
        ///   AND CommitStamp < @CommitStampEnd
        /// ORDER BY CommitStamp, StreamId, CommitSequence
        /// LIMIT @Limit OFFSET @Skip;.
        /// </summary>
        internal static string GetCommitsFromToInstant {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
  FROM Commits
 WHERE BucketId = @BucketId
   AND CommitStamp >= @CommitStampStart
   AND CommitStamp < @CommitStampEnd
 ORDER BY CommitStamp, StreamId, CommitSequence
 LIMIT @Limit OFFSET @Skip;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///  FROM Snapshots
        /// WHERE BucketId = @BucketId
        ///   AND StreamId = @StreamId
        ///   AND StreamRevision <= @StreamRevision
        /// ORDER BY StreamRevision DESC
        /// LIMIT 1;.
        /// </summary>
        internal static string GetSnapshot {
            get {
                return ResourceManagerStub.GetString(@"SELECT *
  FROM Snapshots
 WHERE BucketId = @BucketId
   AND StreamId = @StreamId
   AND StreamRevision <= @StreamRevision
 ORDER BY StreamRevision DESC
 LIMIT 1;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT C.BucketId, C.StreamId, C.StreamIdOriginal, MAX(C.StreamRevision) AS StreamRevision, MAX(COALESCE(S.StreamRevision, 0)) AS SnapshotRevision
        ///  FROM Commits AS C
        /// LEFT OUTER JOIN Snapshots AS S
        ///    ON C.BucketId = @BucketId
        ///   AND C.StreamId = S.StreamId
        ///   AND C.StreamRevision >= S.StreamRevision
        /// GROUP BY C.StreamId, C.BucketId, C.StreamIdOriginal
        ///HAVING MAX(C.StreamRevision) >= MAX(COALESCE(S.StreamRevision, 0)) + @Threshold
        /// ORDER BY C.StreamId
        /// LIMIT @Limit;.
        /// </summary>
        internal static string GetStreamsRequiringSnapshots {
            get {
                return ResourceManagerStub.GetString(@"SELECT C.BucketId, C.StreamId, C.StreamIdOriginal, MAX(C.StreamRevision) AS StreamRevision, MAX(COALESCE(S.StreamRevision, 0)) AS SnapshotRevision
  FROM Commits AS C
 LEFT OUTER JOIN Snapshots AS S
    ON C.BucketId = @BucketId
   AND C.StreamId = S.StreamId
   AND C.StreamRevision >= S.StreamRevision
 GROUP BY C.StreamId, C.BucketId, C.StreamIdOriginal
HAVING MAX(C.StreamRevision) >= MAX(COALESCE(S.StreamRevision, 0)) + @Threshold
 ORDER BY C.StreamId
 LIMIT @Limit;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
        ///  FROM Commits
        /// WHERE Dispatched = 0
        /// ORDER BY CheckpointNumber
        /// LIMIT @Limit OFFSET @Skip;.
        /// </summary>
        internal static string GetUndispatchedCommits {
            get {
                return ResourceManagerStub.GetString(@"SELECT BucketId, StreamId, StreamIdOriginal, StreamRevision, CommitId, CommitSequence, CommitStamp, CheckpointNumber, Headers, Payload
  FROM Commits
 WHERE Dispatched = 0
 ORDER BY CheckpointNumber
 LIMIT @Limit OFFSET @Skip;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Commits
        ///   SET Dispatched = 1
        /// WHERE BucketId = @BucketId
        ///   AND StreamId = @StreamId
        ///   AND CommitSequence = @CommitSequence;.
        /// </summary>
        internal static string MarkCommitAsDispatched {
            get {
                return ResourceManagerStub.GetString(@"UPDATE Commits
   SET Dispatched = 1
 WHERE BucketId = @BucketId
   AND StreamId = @StreamId
   AND CommitSequence = @CommitSequence;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Snapshots WHERE BucketId = @BucketId;
        ///DELETE FROM Commits WHERE BucketId = @BucketId;.
        /// </summary>
        internal static string PurgeBucket {
            get {
                return ResourceManagerStub.GetString(@"DELETE FROM Snapshots WHERE BucketId = @BucketId;
DELETE FROM Commits WHERE BucketId = @BucketId;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Snapshots;
        ///DELETE FROM Commits;.
        /// </summary>
        internal static string PurgeStorage {
            get {
                return ResourceManagerStub.GetString(@"DELETE FROM Snapshots;
DELETE FROM Commits;", resourceCulture);
            }
        }
    }
}
